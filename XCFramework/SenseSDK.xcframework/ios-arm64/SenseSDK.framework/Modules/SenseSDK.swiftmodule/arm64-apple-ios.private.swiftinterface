// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
// swift-module-flags: -target arm64-apple-ios12.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name SenseSDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AVFoundation
import AdSupport
import AppTrackingTransparency
import CallKit
import SystemConfiguration.CaptiveNetwork
import CommonCrypto
import Contacts
import CoreBluetooth
import CoreGraphics
import CoreLocation
import CoreMotion
import CoreTelephony
import CryptoKit
import Darwin
import DeviceActivity
import ExternalAccessory
import Foundation
import LocalAuthentication
import MachO
import MapKit
import MediaPlayer
import MessageUI
import Network
import NetworkExtension
import ObjectiveC
import Photos
import Security
@_exported import SenseSDK
import Swift
import SystemConfiguration
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@objc public protocol SenseDelegate {
  @objc func onFailure(message: Swift.String)
  @objc func onSuccess(data: Swift.String)
}
@objc public protocol SenseBehaviourDelegate {
  @objc func onFailureBehaviour(message: Swift.String)
  @objc func onSuccessBehaviour(data: Swift.String)
}
@objc @_inheritsConvenienceInitializers public class Sense : ObjectiveC.NSObject {
  @objc override dynamic public init()
  public func initializeLocationManager()
  public static func initSDK(senseConfig: SenseSDK.SenseConfig?, withDelegate: (any SenseSDK.SenseDelegate)?)
  public static func getScrollData() -> [Any]
  public static func getBehaviourData(withDelegate behaviourDelegate: (any SenseSDK.SenseBehaviourDelegate)?)
  public static func initKeyStrokeBehaviour(for textFields: [UIKit.UITextField])
  public static func initScrollBehaviour(for scrollViews: [UIKit.UIScrollView])
  public static func initTouchBehaviour(for view: UIKit.UIView)
  public static func getSenseDetails(viewController: UIKit.UIViewController, withDelegate: (any SenseSDK.SenseDelegate)?)
  @objc deinit
}
public struct KeystrokeData {
}
public class SenseConfig {
  public var apiKey: Swift.String?
  public var senseInfo: Swift.Bool?
  public var allowGeoLocation: Swift.Bool?
  public var tag: Swift.String?
  public var sessionId: Swift.String?
  public var metaInfo: [Swift.String : Any]?
  public init()
  @objc deinit
}
public func screenSize() -> Swift.String?
public var senseConfig: SenseSDK.SenseConfig?
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class SecureContainerView : UIKit.UIView {
  @_Concurrency.MainActor(unsafe) final public let contentView: UIKit.UIView
  @_Concurrency.MainActor(unsafe) final public let screenshotLabel: UIKit.UILabel
  @_Concurrency.MainActor(unsafe) final public let screenshotImageView: UIKit.UIImageView
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
